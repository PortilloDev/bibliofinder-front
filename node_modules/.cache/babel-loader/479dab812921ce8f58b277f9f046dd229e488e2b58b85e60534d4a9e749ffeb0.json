{"ast":null,"code":"// Abstract adapter pattern for book APIs\n// This allows easy integration of any book API without affecting the core application\n\nclass BookAPIAdapter {\n  constructor(apiService) {\n    this.apiService = apiService;\n  }\n  async search(query, options = {}) {\n    throw new Error('search method must be implemented by subclass');\n  }\n  async getBookDetails(bookId) {\n    throw new Error('getBookDetails method must be implemented by subclass');\n  }\n\n  // Normalize book data to a standard format\n  normalizeBook(rawBook) {\n    throw new Error('normalizeBook method must be implemented by subclass');\n  }\n\n  // Standard book format that all adapters should return\n  createStandardBook({\n    id,\n    title,\n    authors = [],\n    description = '',\n    publishedDate = '',\n    publisher = '',\n    pageCount = 0,\n    categories = [],\n    averageRating = 0,\n    ratingsCount = 0,\n    imageLinks = {},\n    language = 'es',\n    isbn = '',\n    source = 'unknown'\n  }) {\n    return {\n      id: String(id),\n      title: String(title || 'Sin título'),\n      authors: Array.isArray(authors) ? authors : [authors].filter(Boolean),\n      description: String(description || ''),\n      publishedDate: String(publishedDate || ''),\n      publisher: String(publisher || ''),\n      pageCount: Number(pageCount) || 0,\n      categories: Array.isArray(categories) ? categories : [categories].filter(Boolean),\n      averageRating: Number(averageRating) || 0,\n      ratingsCount: Number(ratingsCount) || 0,\n      imageLinks: {\n        thumbnail: (imageLinks === null || imageLinks === void 0 ? void 0 : imageLinks.thumbnail) || (imageLinks === null || imageLinks === void 0 ? void 0 : imageLinks.small) || '',\n        small: (imageLinks === null || imageLinks === void 0 ? void 0 : imageLinks.small) || (imageLinks === null || imageLinks === void 0 ? void 0 : imageLinks.thumbnail) || '',\n        medium: (imageLinks === null || imageLinks === void 0 ? void 0 : imageLinks.medium) || (imageLinks === null || imageLinks === void 0 ? void 0 : imageLinks.small) || (imageLinks === null || imageLinks === void 0 ? void 0 : imageLinks.thumbnail) || '',\n        large: (imageLinks === null || imageLinks === void 0 ? void 0 : imageLinks.large) || (imageLinks === null || imageLinks === void 0 ? void 0 : imageLinks.medium) || (imageLinks === null || imageLinks === void 0 ? void 0 : imageLinks.small) || (imageLinks === null || imageLinks === void 0 ? void 0 : imageLinks.thumbnail) || ''\n      },\n      language: String(language || 'es'),\n      isbn: String(isbn || ''),\n      source: String(source)\n    };\n  }\n}\nexport default BookAPIAdapter;","map":{"version":3,"names":["BookAPIAdapter","constructor","apiService","search","query","options","Error","getBookDetails","bookId","normalizeBook","rawBook","createStandardBook","id","title","authors","description","publishedDate","publisher","pageCount","categories","averageRating","ratingsCount","imageLinks","language","isbn","source","String","Array","isArray","filter","Boolean","Number","thumbnail","small","medium","large"],"sources":["/Applications/Projects/bibliofinder-front/src/services/api/BookAPIAdapter.js"],"sourcesContent":["// Abstract adapter pattern for book APIs\n// This allows easy integration of any book API without affecting the core application\n\nclass BookAPIAdapter {\n  constructor(apiService) {\n    this.apiService = apiService;\n  }\n\n  async search(query, options = {}) {\n    throw new Error('search method must be implemented by subclass');\n  }\n\n  async getBookDetails(bookId) {\n    throw new Error('getBookDetails method must be implemented by subclass');\n  }\n\n  // Normalize book data to a standard format\n  normalizeBook(rawBook) {\n    throw new Error('normalizeBook method must be implemented by subclass');\n  }\n\n  // Standard book format that all adapters should return\n  createStandardBook({\n    id,\n    title,\n    authors = [],\n    description = '',\n    publishedDate = '',\n    publisher = '',\n    pageCount = 0,\n    categories = [],\n    averageRating = 0,\n    ratingsCount = 0,\n    imageLinks = {},\n    language = 'es',\n    isbn = '',\n    source = 'unknown'\n  }) {\n    return {\n      id: String(id),\n      title: String(title || 'Sin título'),\n      authors: Array.isArray(authors) ? authors : [authors].filter(Boolean),\n      description: String(description || ''),\n      publishedDate: String(publishedDate || ''),\n      publisher: String(publisher || ''),\n      pageCount: Number(pageCount) || 0,\n      categories: Array.isArray(categories) ? categories : [categories].filter(Boolean),\n      averageRating: Number(averageRating) || 0,\n      ratingsCount: Number(ratingsCount) || 0,\n      imageLinks: {\n        thumbnail: imageLinks?.thumbnail || imageLinks?.small || '',\n        small: imageLinks?.small || imageLinks?.thumbnail || '',\n        medium: imageLinks?.medium || imageLinks?.small || imageLinks?.thumbnail || '',\n        large: imageLinks?.large || imageLinks?.medium || imageLinks?.small || imageLinks?.thumbnail || ''\n      },\n      language: String(language || 'es'),\n      isbn: String(isbn || ''),\n      source: String(source)\n    };\n  }\n}\n\nexport default BookAPIAdapter;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
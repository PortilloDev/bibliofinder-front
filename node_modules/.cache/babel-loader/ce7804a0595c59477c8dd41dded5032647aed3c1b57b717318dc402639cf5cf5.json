{"ast":null,"code":"var _jsxFileName = \"/Applications/Projects/bibliofinder-front/src/context/CategoriesContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useAuth } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CategoriesContext = /*#__PURE__*/createContext();\nexport const useCategories = () => {\n  _s();\n  const context = useContext(CategoriesContext);\n  if (!context) {\n    throw new Error('useCategories must be used within a CategoriesProvider');\n  }\n  return context;\n};\n\n// Default categories that all users have\n_s(useCategories, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nconst DEFAULT_CATEGORIES = [{\n  id: 'to-read',\n  name: 'Por Leer',\n  icon: '📚',\n  isDefault: true,\n  color: '#3B82F6'\n}, {\n  id: 'reading',\n  name: 'Leyendo',\n  icon: '📖',\n  isDefault: true,\n  color: '#10B981'\n}, {\n  id: 'read',\n  name: 'Leídos',\n  icon: '✅',\n  isDefault: true,\n  color: '#8B5CF6'\n}, {\n  id: 'favorites',\n  name: 'Favoritos',\n  icon: '❤️',\n  isDefault: true,\n  color: '#EF4444'\n}, {\n  id: 'wishlist',\n  name: 'Lista de Deseos',\n  icon: '⭐',\n  isDefault: true,\n  color: '#F59E0B'\n}];\nexport const CategoriesProvider = ({\n  children\n}) => {\n  _s2();\n  const {\n    user,\n    isAuthenticated\n  } = useAuth();\n  const [categories, setCategories] = useState(DEFAULT_CATEGORIES);\n  const [loading, setLoading] = useState(false);\n\n  // Load user categories when authenticated\n  useEffect(() => {\n    if (isAuthenticated && user) {\n      loadUserCategories();\n    } else {\n      setCategories(DEFAULT_CATEGORIES);\n    }\n  }, [isAuthenticated, user]);\n  const loadUserCategories = async () => {\n    try {\n      setLoading(true);\n\n      // Mock API call - Replace with real API when Laravel backend is ready\n      const savedCategories = localStorage.getItem(`categories_${user.id}`);\n      if (savedCategories) {\n        const userCategories = JSON.parse(savedCategories);\n        // Merge default categories with user custom categories\n        const mergedCategories = [...DEFAULT_CATEGORIES, ...userCategories.filter(cat => !cat.isDefault)];\n        setCategories(mergedCategories);\n      } else {\n        setCategories(DEFAULT_CATEGORIES);\n      }\n    } catch (error) {\n      console.error('Error loading categories:', error);\n      setCategories(DEFAULT_CATEGORIES);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const saveCategoriesToStorage = updatedCategories => {\n    if (user) {\n      localStorage.setItem(`categories_${user.id}`, JSON.stringify(updatedCategories));\n    }\n  };\n  const createCategory = async categoryData => {\n    try {\n      const newCategory = {\n        id: `custom_${Date.now()}`,\n        name: categoryData.name,\n        icon: categoryData.icon || '📁',\n        color: categoryData.color || '#6B7280',\n        isDefault: false,\n        createdAt: new Date().toISOString()\n      };\n      const updatedCategories = [...categories, newCategory];\n      setCategories(updatedCategories);\n      saveCategoriesToStorage(updatedCategories);\n      return {\n        success: true,\n        category: newCategory\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const updateCategory = async (categoryId, updates) => {\n    try {\n      // Don't allow updating default categories core properties\n      const category = categories.find(c => c.id === categoryId);\n      if (category !== null && category !== void 0 && category.isDefault && (updates.name || updates.id)) {\n        throw new Error('No se pueden modificar las categorías predeterminadas');\n      }\n      const updatedCategories = categories.map(category => category.id === categoryId ? {\n        ...category,\n        ...updates,\n        updatedAt: new Date().toISOString()\n      } : category);\n      setCategories(updatedCategories);\n      saveCategoriesToStorage(updatedCategories);\n      return {\n        success: true\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const deleteCategory = async categoryId => {\n    try {\n      const category = categories.find(c => c.id === categoryId);\n      if (category !== null && category !== void 0 && category.isDefault) {\n        throw new Error('No se pueden eliminar las categorías predeterminadas');\n      }\n      const updatedCategories = categories.filter(category => category.id !== categoryId);\n      setCategories(updatedCategories);\n      saveCategoriesToStorage(updatedCategories);\n      return {\n        success: true\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const getCategoryById = categoryId => {\n    return categories.find(category => category.id === categoryId);\n  };\n  const getCustomCategories = () => {\n    return categories.filter(category => !category.isDefault);\n  };\n  const getDefaultCategories = () => {\n    return categories.filter(category => category.isDefault);\n  };\n\n  // Import categories from Excel data\n  const importCategoriesFromData = async booksData => {\n    try {\n      const existingCategoryNames = categories.map(c => c.name.toLowerCase());\n      const newCategories = [];\n\n      // Extract unique categories from books data\n      const categoryNames = [...new Set(booksData.map(book => book.category).filter(cat => cat && !existingCategoryNames.includes(cat.toLowerCase())))];\n\n      // Create new categories\n      categoryNames.forEach(name => {\n        const newCategory = {\n          id: `imported_${Date.now()}_${Math.random()}`,\n          name: name,\n          icon: '📁',\n          color: `#${Math.floor(Math.random() * 16777215).toString(16)}`,\n          isDefault: false,\n          imported: true,\n          createdAt: new Date().toISOString()\n        };\n        newCategories.push(newCategory);\n      });\n      if (newCategories.length > 0) {\n        const updatedCategories = [...categories, ...newCategories];\n        setCategories(updatedCategories);\n        saveCategoriesToStorage(updatedCategories);\n      }\n      return {\n        success: true,\n        imported: newCategories.length\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const value = {\n    categories,\n    loading,\n    createCategory,\n    updateCategory,\n    deleteCategory,\n    getCategoryById,\n    getCustomCategories,\n    getDefaultCategories,\n    importCategoriesFromData,\n    defaultCategories: DEFAULT_CATEGORIES\n  };\n  return /*#__PURE__*/_jsxDEV(CategoriesContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, this);\n};\n_s2(CategoriesProvider, \"wz9Cy8b5a1uHO3uWt0NOJrCX8dY=\", false, function () {\n  return [useAuth];\n});\n_c = CategoriesProvider;\nvar _c;\n$RefreshReg$(_c, \"CategoriesProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useAuth","jsxDEV","_jsxDEV","CategoriesContext","useCategories","_s","context","Error","DEFAULT_CATEGORIES","id","name","icon","isDefault","color","CategoriesProvider","children","_s2","user","isAuthenticated","categories","setCategories","loading","setLoading","loadUserCategories","savedCategories","localStorage","getItem","userCategories","JSON","parse","mergedCategories","filter","cat","error","console","saveCategoriesToStorage","updatedCategories","setItem","stringify","createCategory","categoryData","newCategory","Date","now","createdAt","toISOString","success","category","message","updateCategory","categoryId","updates","find","c","map","updatedAt","deleteCategory","getCategoryById","getCustomCategories","getDefaultCategories","importCategoriesFromData","booksData","existingCategoryNames","toLowerCase","newCategories","categoryNames","Set","book","includes","forEach","Math","random","floor","toString","imported","push","length","value","defaultCategories","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Applications/Projects/bibliofinder-front/src/context/CategoriesContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useAuth } from './AuthContext';\n\nconst CategoriesContext = createContext();\n\nexport const useCategories = () => {\n  const context = useContext(CategoriesContext);\n  if (!context) {\n    throw new Error('useCategories must be used within a CategoriesProvider');\n  }\n  return context;\n};\n\n// Default categories that all users have\nconst DEFAULT_CATEGORIES = [\n  { id: 'to-read', name: 'Por Leer', icon: '📚', isDefault: true, color: '#3B82F6' },\n  { id: 'reading', name: 'Leyendo', icon: '📖', isDefault: true, color: '#10B981' },\n  { id: 'read', name: 'Leídos', icon: '✅', isDefault: true, color: '#8B5CF6' },\n  { id: 'favorites', name: 'Favoritos', icon: '❤️', isDefault: true, color: '#EF4444' },\n  { id: 'wishlist', name: 'Lista de Deseos', icon: '⭐', isDefault: true, color: '#F59E0B' }\n];\n\nexport const CategoriesProvider = ({ children }) => {\n  const { user, isAuthenticated } = useAuth();\n  const [categories, setCategories] = useState(DEFAULT_CATEGORIES);\n  const [loading, setLoading] = useState(false);\n\n  // Load user categories when authenticated\n  useEffect(() => {\n    if (isAuthenticated && user) {\n      loadUserCategories();\n    } else {\n      setCategories(DEFAULT_CATEGORIES);\n    }\n  }, [isAuthenticated, user]);\n\n  const loadUserCategories = async () => {\n    try {\n      setLoading(true);\n      \n      // Mock API call - Replace with real API when Laravel backend is ready\n      const savedCategories = localStorage.getItem(`categories_${user.id}`);\n      if (savedCategories) {\n        const userCategories = JSON.parse(savedCategories);\n        // Merge default categories with user custom categories\n        const mergedCategories = [\n          ...DEFAULT_CATEGORIES,\n          ...userCategories.filter(cat => !cat.isDefault)\n        ];\n        setCategories(mergedCategories);\n      } else {\n        setCategories(DEFAULT_CATEGORIES);\n      }\n    } catch (error) {\n      console.error('Error loading categories:', error);\n      setCategories(DEFAULT_CATEGORIES);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const saveCategoriesToStorage = (updatedCategories) => {\n    if (user) {\n      localStorage.setItem(`categories_${user.id}`, JSON.stringify(updatedCategories));\n    }\n  };\n\n  const createCategory = async (categoryData) => {\n    try {\n      const newCategory = {\n        id: `custom_${Date.now()}`,\n        name: categoryData.name,\n        icon: categoryData.icon || '📁',\n        color: categoryData.color || '#6B7280',\n        isDefault: false,\n        createdAt: new Date().toISOString()\n      };\n\n      const updatedCategories = [...categories, newCategory];\n      setCategories(updatedCategories);\n      saveCategoriesToStorage(updatedCategories);\n\n      return { success: true, category: newCategory };\n    } catch (error) {\n      return { success: false, error: error.message };\n    }\n  };\n\n  const updateCategory = async (categoryId, updates) => {\n    try {\n      // Don't allow updating default categories core properties\n      const category = categories.find(c => c.id === categoryId);\n      if (category?.isDefault && (updates.name || updates.id)) {\n        throw new Error('No se pueden modificar las categorías predeterminadas');\n      }\n\n      const updatedCategories = categories.map(category =>\n        category.id === categoryId\n          ? { ...category, ...updates, updatedAt: new Date().toISOString() }\n          : category\n      );\n\n      setCategories(updatedCategories);\n      saveCategoriesToStorage(updatedCategories);\n\n      return { success: true };\n    } catch (error) {\n      return { success: false, error: error.message };\n    }\n  };\n\n  const deleteCategory = async (categoryId) => {\n    try {\n      const category = categories.find(c => c.id === categoryId);\n      if (category?.isDefault) {\n        throw new Error('No se pueden eliminar las categorías predeterminadas');\n      }\n\n      const updatedCategories = categories.filter(category => category.id !== categoryId);\n      setCategories(updatedCategories);\n      saveCategoriesToStorage(updatedCategories);\n\n      return { success: true };\n    } catch (error) {\n      return { success: false, error: error.message };\n    }\n  };\n\n  const getCategoryById = (categoryId) => {\n    return categories.find(category => category.id === categoryId);\n  };\n\n  const getCustomCategories = () => {\n    return categories.filter(category => !category.isDefault);\n  };\n\n  const getDefaultCategories = () => {\n    return categories.filter(category => category.isDefault);\n  };\n\n  // Import categories from Excel data\n  const importCategoriesFromData = async (booksData) => {\n    try {\n      const existingCategoryNames = categories.map(c => c.name.toLowerCase());\n      const newCategories = [];\n\n      // Extract unique categories from books data\n      const categoryNames = [...new Set(\n        booksData\n          .map(book => book.category)\n          .filter(cat => cat && !existingCategoryNames.includes(cat.toLowerCase()))\n      )];\n\n      // Create new categories\n      categoryNames.forEach(name => {\n        const newCategory = {\n          id: `imported_${Date.now()}_${Math.random()}`,\n          name: name,\n          icon: '📁',\n          color: `#${Math.floor(Math.random()*16777215).toString(16)}`,\n          isDefault: false,\n          imported: true,\n          createdAt: new Date().toISOString()\n        };\n        newCategories.push(newCategory);\n      });\n\n      if (newCategories.length > 0) {\n        const updatedCategories = [...categories, ...newCategories];\n        setCategories(updatedCategories);\n        saveCategoriesToStorage(updatedCategories);\n      }\n\n      return { success: true, imported: newCategories.length };\n    } catch (error) {\n      return { success: false, error: error.message };\n    }\n  };\n\n  const value = {\n    categories,\n    loading,\n    createCategory,\n    updateCategory,\n    deleteCategory,\n    getCategoryById,\n    getCustomCategories,\n    getDefaultCategories,\n    importCategoriesFromData,\n    defaultCategories: DEFAULT_CATEGORIES\n  };\n\n  return (\n    <CategoriesContext.Provider value={value}>\n      {children}\n    </CategoriesContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}